{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenEdusync API",
        "description": "API documentation for the OpenEdusy application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/localhost\/api\/v1",
            "description": "Local server"
        }
    ],
    "paths": {
        "\/api\/AcademicCalendar": {
            "get": {
                "tags": [
                    "AcademicCalendar"
                ],
                "summary": "Get paginated list of AcademicCalendar",
                "description": "Retrieve a paginated list of AcademicCalendar with optional search",
                "operationId": "getAcademicCalendarPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter[school_year_id]",
                        "in": "query",
                        "description": "Filter by school year ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Comma-separated list of related resources to include in the response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedAcademicCalendarResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AcademicCalendar"
                ],
                "summary": "Create a new AcademicCalendar",
                "description": " Create a new AcademicCalendar with the provided details",
                "operationId": "createAcademicCalendar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicCalendar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicCalendar created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAcademicCalendarResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicCalendar\/{id}": {
            "get": {
                "tags": [
                    "AcademicCalendar"
                ],
                "summary": "Get a specific AcademicCalendar",
                "description": "Retrieve a AcademicCalendar by its ID",
                "operationId": "getAcademicCalendarById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetAcademicCalendarResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicCalendar not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "AcademicCalendar"
                ],
                "summary": "Update a AcademicCalendar",
                "description": "Update an existing AcademicCalendar with the provided details",
                "operationId": "updateAcademicCalendar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicCalendar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicCalendar updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateAcademicCalendarResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicCalendar not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AcademicCalendar"
                ],
                "summary": "Delete a AcademicCalendar",
                "description": "Delete a AcademicCalendar by its ID",
                "operationId": "deleteAcademicCalendar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "AcademicCalendar deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteAcademicCalendarResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicCalendar not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicProgram": {
            "get": {
                "tags": [
                    "AcademicProgram"
                ],
                "summary": "Get paginated list of AcademicProgram",
                "description": "Retrieve a paginated list of AcademicProgram with optional search",
                "operationId": "getAcademicProgramPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter[college_id]",
                        "in": "query",
                        "description": "Filter by college ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include program type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedAcademicProgramResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicProgram\/{id}": {
            "get": {
                "tags": [
                    "AcademicProgram"
                ],
                "summary": "Get a specific AcademicProgram",
                "description": "Retrieve a AcademicProgram by its ID",
                "operationId": "getAcademicProgramById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetAcademicProgramResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicProgram not found"
                    }
                }
            }
        },
        "\/api\/AcademicProgram\/create": {
            "post": {
                "tags": [
                    "AcademicProgram"
                ],
                "summary": "Create a new AcademicProgram",
                "description": " Create a new AcademicProgram with the provided details",
                "operationId": "createAcademicProgram",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicProgram"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicProgram created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAcademicProgramResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicProgram\/update\/{id}": {
            "put": {
                "tags": [
                    "AcademicProgram"
                ],
                "summary": "Update a AcademicProgram",
                "description": "Update an existing AcademicProgram with the provided details",
                "operationId": "updateAcademicProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicProgram"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicProgram updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateAcademicProgramResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicProgram not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicProgram\/delete\/{id}": {
            "delete": {
                "tags": [
                    "AcademicProgram"
                ],
                "summary": "Delete a AcademicProgram",
                "description": "Delete a AcademicProgram by its ID",
                "operationId": "deleteAcademicProgram",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "AcademicProgram deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteAcademicProgramResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicProgram not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicTerm": {
            "get": {
                "tags": [
                    "AcademicTerm"
                ],
                "summary": "Get paginated list of AcademicTerm",
                "description": "Retrieve a paginated list of AcademicTerm with optional search",
                "operationId": "getAcademicTermPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedAcademicTermResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AcademicTerm"
                ],
                "summary": "Create a new AcademicTerm",
                "description": " Create a new AcademicTerm with the provided details",
                "operationId": "createAcademicTerm",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicTerm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicTerm created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateAcademicTermResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/AcademicTerm\/{id}": {
            "get": {
                "tags": [
                    "AcademicTerm"
                ],
                "summary": "Get a specific AcademicTerm",
                "description": "Retrieve a AcademicTerm by its ID",
                "operationId": "getAcademicTermById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetAcademicTermResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicTerm not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "AcademicTerm"
                ],
                "summary": "Update a AcademicTerm",
                "description": "Update an existing AcademicTerm with the provided details",
                "operationId": "updateAcademicTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AcademicTerm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AcademicTerm updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateAcademicTermResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicTerm not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AcademicTerm"
                ],
                "summary": "Delete a AcademicTerm",
                "description": "Delete a AcademicTerm by its ID",
                "operationId": "deleteAcademicTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "AcademicTerm deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteAcademicTermResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AcademicTerm not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Building": {
            "get": {
                "tags": [
                    "Building"
                ],
                "summary": "Get paginated list of Building",
                "description": "Retrieve a paginated list of Building with optional search",
                "operationId": "getBuildingPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "filter[campus_id]",
                        "in": "query",
                        "description": "Filter by Campus ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedBuildingResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Building\/{id}": {
            "get": {
                "tags": [
                    "Building"
                ],
                "summary": "Get a specific Building",
                "description": "Retrieve a Building by its ID",
                "operationId": "getBuildingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetBuildingResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    }
                }
            }
        },
        "\/api\/Building\/create": {
            "post": {
                "tags": [
                    "Building"
                ],
                "summary": "Create a new Building",
                "description": " Create a new Building with the provided details",
                "operationId": "createBuilding",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Building"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Building created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateBuildingResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Building\/update\/{id}": {
            "put": {
                "tags": [
                    "Building"
                ],
                "summary": "Update a Building",
                "description": "Update an existing Building with the provided details",
                "operationId": "updateBuilding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Building"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Building updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateBuildingResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Building\/delete\/{id}": {
            "delete": {
                "tags": [
                    "Building"
                ],
                "summary": "Delete a Building",
                "description": "Delete a Building by its ID",
                "operationId": "deleteBuilding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Building deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteBuildingResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Campus": {
            "get": {
                "tags": [
                    "Campus"
                ],
                "summary": "Get paginated list of Campus",
                "description": "Retrieve a paginated list of Campus with optional search",
                "operationId": "getCampusPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedCampusResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Campus\/{id}": {
            "get": {
                "tags": [
                    "Campus"
                ],
                "summary": "Get a specific Campus",
                "description": "Retrieve a Campus by its ID",
                "operationId": "getCampusById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetCampusResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campus not found"
                    }
                }
            }
        },
        "\/api\/Campus\/create": {
            "post": {
                "tags": [
                    "Campus"
                ],
                "summary": "Create a new Campus",
                "description": " Create a new Campus with the provided details",
                "operationId": "createCampus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Campus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Campus created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCampusResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Campus\/update\/{id}": {
            "put": {
                "tags": [
                    "Campus"
                ],
                "summary": "Update a Campus",
                "description": "Update an existing Campus with the provided details",
                "operationId": "updateCampus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Campus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Campus updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateCampusResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campus not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Campus\/delete\/{id}": {
            "delete": {
                "tags": [
                    "Campus"
                ],
                "summary": "Delete a Campus",
                "description": "Delete a Campus by its ID",
                "operationId": "deleteCampus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Campus deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCampusResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campus not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/College": {
            "get": {
                "tags": [
                    "College"
                ],
                "summary": "Get paginated list of College",
                "description": "Retrieve a paginated list of College with optional search",
                "operationId": "getCollegePaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter[campus_id]",
                        "in": "query",
                        "description": "Filter by Campus ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedCollegeResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/College\/{id}": {
            "get": {
                "tags": [
                    "College"
                ],
                "summary": "Get a specific College",
                "description": "Retrieve a College by its ID",
                "operationId": "getCollegeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetCollegeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "College not found"
                    }
                }
            }
        },
        "\/api\/College\/create": {
            "post": {
                "tags": [
                    "College"
                ],
                "summary": "Create a new College",
                "description": " Create a new College with the provided details",
                "operationId": "createCollege",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/College"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "College created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCollegeResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/College\/update\/{id}": {
            "put": {
                "tags": [
                    "College"
                ],
                "summary": "Update a College",
                "description": "Update an existing College with the provided details",
                "operationId": "updateCollege",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/College"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "College updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateCollegeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "College not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/College\/delete\/{id}": {
            "delete": {
                "tags": [
                    "College"
                ],
                "summary": "Delete a College",
                "description": "Delete a College by its ID",
                "operationId": "deleteCollege",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "College deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCollegeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "College not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Course": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get paginated list of Course",
                "description": "Retrieve a paginated list of Course with optional search",
                "operationId": "getCoursePaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedCourseResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Create a new Course",
                "description": " Create a new Course with the provided details",
                "operationId": "createCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCourseResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Course\/{id}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get a specific Course",
                "description": "Retrieve a Course by its ID",
                "operationId": "getCourseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetCourseResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Course"
                ],
                "summary": "Update a Course",
                "description": "Update an existing Course with the provided details",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateCourseResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Course"
                ],
                "summary": "Delete a Course",
                "description": "Delete a Course by its ID",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCourseResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Curriculum": {
            "get": {
                "tags": [
                    "Curriculum"
                ],
                "summary": "Get paginated list of Curriculum",
                "description": "Retrieve a paginated list of Curriculum with optional search",
                "operationId": "getCurriculumPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter[academic_program_id]",
                        "in": "query",
                        "description": "Filter by academic program ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedCurriculumResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Curriculum"
                ],
                "summary": "Create a new Curriculum",
                "description": " Create a new Curriculum with the provided details",
                "operationId": "createCurriculum",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Curriculum"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Curriculum created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCurriculumResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Curriculum\/{id}": {
            "get": {
                "tags": [
                    "Curriculum"
                ],
                "summary": "Get a specific Curriculum",
                "description": "Retrieve a Curriculum by its ID",
                "operationId": "getCurriculumById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetCurriculumResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Curriculum not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Curriculum"
                ],
                "summary": "Update a Curriculum",
                "description": "Update an existing Curriculum with the provided details",
                "operationId": "updateCurriculum",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Curriculum"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Curriculum updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateCurriculumResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Curriculum not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Curriculum"
                ],
                "summary": "Delete a Curriculum",
                "description": "Delete a Curriculum by its ID",
                "operationId": "deleteCurriculum",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Curriculum deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCurriculumResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Curriculum not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/CurriculumDetail": {
            "get": {
                "tags": [
                    "CurriculumDetail"
                ],
                "summary": "Get paginated list of CurriculumDetail",
                "description": "Retrieve a paginated list of CurriculumDetail with optional search",
                "operationId": "getCurriculumDetailPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedCurriculumDetailResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CurriculumDetail"
                ],
                "summary": "Create a new CurriculumDetail",
                "description": " Create a new CurriculumDetail with the provided details",
                "operationId": "createCurriculumDetail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CurriculumDetail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CurriculumDetail created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCurriculumDetailResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/CurriculumDetail\/{id}": {
            "get": {
                "tags": [
                    "CurriculumDetail"
                ],
                "summary": "Get a specific CurriculumDetail",
                "description": "Retrieve a CurriculumDetail by its ID",
                "operationId": "getCurriculumDetailById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetCurriculumDetailResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CurriculumDetail not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "CurriculumDetail"
                ],
                "summary": "Update a CurriculumDetail",
                "description": "Update an existing CurriculumDetail with the provided details",
                "operationId": "updateCurriculumDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CurriculumDetail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CurriculumDetail updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateCurriculumDetailResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CurriculumDetail not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CurriculumDetail"
                ],
                "summary": "Delete a CurriculumDetail",
                "description": "Delete a CurriculumDetail by its ID",
                "operationId": "deleteCurriculumDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "CurriculumDetail deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCurriculumDetailResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CurriculumDetail not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/ProgramType": {
            "get": {
                "tags": [
                    "ProgramType"
                ],
                "summary": "Get paginated list of ProgramType",
                "description": "Retrieve a paginated list of ProgramType with optional search",
                "operationId": "getProgramTypePaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Pagination",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedProgramTypeResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/ProgramType\/{id}": {
            "get": {
                "tags": [
                    "ProgramType"
                ],
                "summary": "Get a specific ProgramType",
                "description": "Retrieve a ProgramType by its ID",
                "operationId": "getProgramTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetProgramTypeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProgramType not found"
                    }
                }
            }
        },
        "\/api\/ProgramType\/create": {
            "post": {
                "tags": [
                    "ProgramType"
                ],
                "summary": "Create a new ProgramType",
                "description": " Create a new ProgramType with the provided details",
                "operationId": "createProgramType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramType created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateProgramTypeResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/ProgramType\/update\/{id}": {
            "put": {
                "tags": [
                    "ProgramType"
                ],
                "summary": "Update a ProgramType",
                "description": "Update an existing ProgramType with the provided details",
                "operationId": "updateProgramType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramType updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateProgramTypeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProgramType not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/ProgramType\/delete\/{id}": {
            "delete": {
                "tags": [
                    "ProgramType"
                ],
                "summary": "Delete a ProgramType",
                "description": "Delete a ProgramType by its ID",
                "operationId": "deleteProgramType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ProgramType deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteProgramTypeResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProgramType not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Room": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get paginated list of Room",
                "description": "Retrieve a paginated list of Room with optional search",
                "operationId": "getRoomPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "filter[building_id]",
                        "in": "query",
                        "description": "Filter by Building ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedRoomResponse200"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Room\/{id}": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get a specific Room",
                "description": "Retrieve a Room by its ID",
                "operationId": "getRoomById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetRoomResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    }
                }
            }
        },
        "\/api\/Room\/create": {
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Create a new Room",
                "description": " Create a new Room with the provided details",
                "operationId": "createRoom",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Room"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateRoomResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Room\/update\/{id}": {
            "put": {
                "tags": [
                    "Room"
                ],
                "summary": "Update a Room",
                "description": "Update an existing Room with the provided details",
                "operationId": "updateRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Room"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateRoomResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/Room\/delete\/{id}": {
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "Delete a Room",
                "description": "Delete a Room by its ID",
                "operationId": "deleteRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Room deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteRoomResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/SchoolYear": {
            "get": {
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Get paginated list of SchoolYear",
                "description": "Retrieve a paginated list of SchoolYear with optional search",
                "operationId": "getSchoolYearPaginated",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by fields and direction. Example: ?sort=-start_date (descending), ?sort=start_date (ascending). Supports multiple fields: ?sort=-start_date,title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "start_date",
                            "example": "-start_date"
                        }
                    }
                ],
                "responses": {
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PaginatedSchoolYearResponse200"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Create a new SchoolYear",
                "description": " Create a new SchoolYear with the provided details",
                "operationId": "createSchoolYear",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SchoolYear"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SchoolYear created successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateSchoolYearResponse200"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/SchoolYear\/{id}": {
            "get": {
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Get a specific SchoolYear",
                "description": "Retrieve a SchoolYear by its ID",
                "operationId": "getSchoolYearById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/GetSchoolYearResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SchoolYear not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Update a SchoolYear",
                "description": "Update an existing SchoolYear with the provided details",
                "operationId": "updateSchoolYear",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SchoolYear"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SchoolYear updated successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateSchoolYearResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SchoolYear not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SchoolYear"
                ],
                "summary": "Delete a SchoolYear",
                "description": "Delete a SchoolYear by its ID",
                "operationId": "deleteSchoolYear",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "SchoolYear deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteSchoolYearResponse200"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SchoolYear not found"
                    },
                    "500": {
                        "description": " Internal server error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UnauthenticatedResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "--- Shared Response Schemas ---",
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "UnauthorizedResponse": {
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthorized."
                    }
                },
                "type": "object"
            },
            "ForbiddenResponse": {
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Forbidden."
                    }
                },
                "type": "object"
            },
            "NotFoundResponse": {
                "description": "Standard not found response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "The route could not be found."
                    }
                },
                "type": "object"
            },
            "BadRequestResponse": {
                "description": "Standard bad request response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad request."
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The title field is required. (and 3 more errors)"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "The field is required."
                            }
                        }
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "description": "Standard success response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "description": "The data returned by the API",
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NoContentResponse": {
                "description": "Standard no content response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    }
                },
                "type": "object"
            },
            "InternalServerErrorResponse": {
                "description": "Standard internal server error response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message."
                    }
                },
                "type": "object"
            },
            "MetaData": {
                "description": "Pagination and metadata for the response",
                "required": [
                    "current_page",
                    "last_page",
                    "per_page",
                    "total"
                ],
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "type": "integer",
                        "example": 8
                    }
                },
                "type": "object"
            },
            "AcademicCalendar": {
                "title": "AcademicCalendar",
                "required": [],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "school_year_id": {
                        "type": "integer"
                    },
                    "event": {
                        "type": "string",
                        "enum": [
                            "REGISTRATION",
                            "ENROLLMENT",
                            "ORIENTATION",
                            "START_OF_CLASSES",
                            "HOLIDAY",
                            "UNIVERSITY_EVENT",
                            "DEADLINE",
                            "PERIODIC_EXAM",
                            "END_OF_CLASSES",
                            "GRADE_SUBMISSION",
                            "GRADUATION",
                            "FACULTY_EVALUATION",
                            "ACADEMIC_TRANSITION",
                            "OTHER"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "school_year": {
                        "$ref": "#\/components\/schemas\/SchoolYear"
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicCalendar": {
                "title": "PaginatedAcademicCalendar",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AcademicCalendar"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicCalendarResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedAcademicCalendar"
                    }
                },
                "type": "object"
            },
            "GetAcademicCalendarResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicCalendar"
                    }
                },
                "type": "object"
            },
            "GetAcademicCalendarsResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AcademicCalendar"
                        }
                    }
                },
                "type": "object"
            },
            "CreateAcademicCalendarResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicCalendar"
                    }
                },
                "type": "object"
            },
            "UpdateAcademicCalendarResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicCalendar"
                    }
                },
                "type": "object"
            },
            "DeleteAcademicCalendarResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "AcademicProgram": {
                "title": "AcademicProgram",
                "required": [
                    "program_name",
                    "short_name",
                    "year_first_implemented",
                    "college_id",
                    "program_type_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "program_name": {
                        "type": "string",
                        "example": "Bachelor of Science in Computer Science"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "BSCS"
                    },
                    "year_first_implemented": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-01"
                    },
                    "college_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "program_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-07T10:30:14.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-07T10:30:14.000000Z"
                    },
                    "program_type": {
                        "$ref": "#\/components\/schemas\/ProgramType"
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicProgram": {
                "title": "PaginatedAcademicProgram",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AcademicProgram"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicProgramResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedAcademicProgram"
                    }
                },
                "type": "object"
            },
            "GetAcademicProgramResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicProgram"
                    }
                },
                "type": "object"
            },
            "CreateAcademicProgramResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicProgram"
                    }
                },
                "type": "object"
            },
            "UpdateAcademicProgramResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicProgram"
                    }
                },
                "type": "object"
            },
            "DeleteAcademicProgramResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "AcademicTerm": {
                "title": "AcademicTerm",
                "required": [
                    "name",
                    "description",
                    "suffix",
                    "number_of_terms"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Term 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description of Term 1",
                        "nullable": true
                    },
                    "suffix": {
                        "type": "string",
                        "example": "Semester"
                    },
                    "number_of_terms": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicTerm": {
                "title": "PaginatedAcademicTerm",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AcademicTerm"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedAcademicTermResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedAcademicTerm"
                    }
                },
                "type": "object"
            },
            "GetAcademicTermResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicTerm"
                    }
                },
                "type": "object"
            },
            "GetAcademicTermsResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AcademicTerm"
                        }
                    }
                },
                "type": "object"
            },
            "CreateAcademicTermResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicTerm"
                    }
                },
                "type": "object"
            },
            "UpdateAcademicTermResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/AcademicTerm"
                    }
                },
                "type": "object"
            },
            "DeleteAcademicTermResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Building": {
                "title": "Building",
                "required": [
                    "name",
                    "short_name",
                    "latitude",
                    "longitude",
                    "campus_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "short_name": {
                        "type": "string",
                        "maxLength": 25
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "campus_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaginatedBuilding": {
                "title": "PaginatedBuilding",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Building"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedBuildingResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedBuilding"
                    }
                },
                "type": "object"
            },
            "GetBuildingResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Building"
                    }
                },
                "type": "object"
            },
            "CreateBuildingResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Building"
                    }
                },
                "type": "object"
            },
            "UpdateBuildingResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Building"
                    }
                },
                "type": "object"
            },
            "DeleteBuildingResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Campus": {
                "title": "Campus",
                "required": [
                    "name",
                    "short_name",
                    "address"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "short_name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PaginatedCampus": {
                "title": "PaginatedCampus",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Campus"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedCampusResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedCampus"
                    }
                },
                "type": "object"
            },
            "GetCampusResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Campus"
                    }
                },
                "type": "object"
            },
            "CreateCampusResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Campus"
                    }
                },
                "type": "object"
            },
            "UpdateCampusResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Campus"
                    }
                },
                "type": "object"
            },
            "DeleteCampusResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "College": {
                "title": "College",
                "required": [
                    "college_name",
                    "college_shortname",
                    "campus_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "college_name": {
                        "type": "string"
                    },
                    "college_shortname": {
                        "type": "string"
                    },
                    "campus_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaginatedCollege": {
                "title": "PaginatedCollege",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/College"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedCollegeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedCollege"
                    }
                },
                "type": "object"
            },
            "GetCollegeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/College"
                    }
                },
                "type": "object"
            },
            "CreateCollegeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/College"
                    }
                },
                "type": "object"
            },
            "UpdateCollegeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/College"
                    }
                },
                "type": "object"
            },
            "DeleteCollegeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Course": {
                "title": "Course",
                "required": [
                    "course_code",
                    "course_title",
                    "course_description",
                    "with_laboratory",
                    "is_specialize",
                    "lecture_units",
                    "laboratory_units",
                    "credit_units"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "course_code": {
                        "type": "string",
                        "example": "CS101"
                    },
                    "course_title": {
                        "type": "string",
                        "example": "Introduction to Computer Science"
                    },
                    "course_description": {
                        "type": "string",
                        "example": "A foundational course covering basic computer science concepts"
                    },
                    "with_laboratory": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_specialize": {
                        "type": "boolean",
                        "example": false
                    },
                    "lecture_units": {
                        "type": "number",
                        "format": "float",
                        "example": 3
                    },
                    "laboratory_units": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "credit_units": {
                        "type": "number",
                        "format": "float",
                        "example": 3
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaginatedCourse": {
                "title": "PaginatedCourse",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Course"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedCourseResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedCourse"
                    }
                },
                "type": "object"
            },
            "GetCourseResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Course"
                    }
                },
                "type": "object"
            },
            "GetCoursesResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Course"
                        }
                    }
                },
                "type": "object"
            },
            "CreateCourseResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Course"
                    }
                },
                "type": "object"
            },
            "UpdateCourseResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Course"
                    }
                },
                "type": "object"
            },
            "DeleteCourseResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Curriculum": {
                "title": "Curriculum",
                "required": [
                    "academic_program_id",
                    "academic_term_id",
                    "curriculum_code",
                    "curriculum_name",
                    "description",
                    "effective_year",
                    "total_units",
                    "total_hours",
                    "status",
                    "approved_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "academic_program_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "academic_term_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "curriculum_code": {
                        "type": "string",
                        "example": "CURR-2024-001"
                    },
                    "curriculum_name": {
                        "type": "string",
                        "example": "Computer Science Curriculum 2024"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated curriculum for Computer Science program",
                        "nullable": true
                    },
                    "effective_year": {
                        "type": "integer",
                        "example": 2024
                    },
                    "total_units": {
                        "type": "integer",
                        "example": 120
                    },
                    "total_hours": {
                        "type": "integer",
                        "example": 2400
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "archived"
                        ],
                        "example": "active"
                    },
                    "approved_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "academic_program": {
                        "$ref": "#\/components\/schemas\/AcademicProgram"
                    },
                    "academic_term": {
                        "$ref": "#\/components\/schemas\/AcademicTerm"
                    }
                },
                "type": "object"
            },
            "PaginatedCurriculum": {
                "title": "PaginatedCurriculum",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Curriculum"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedCurriculumResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedCurriculum"
                    }
                },
                "type": "object"
            },
            "GetCurriculumResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Curriculum"
                    }
                },
                "type": "object"
            },
            "GetCurriculumsResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Curriculum"
                        }
                    }
                },
                "type": "object"
            },
            "CreateCurriculumResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Curriculum"
                    }
                },
                "type": "object"
            },
            "UpdateCurriculumResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Curriculum"
                    }
                },
                "type": "object"
            },
            "DeleteCurriculumResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "CurriculumDetail": {
                "title": "CurriculumDetail",
                "required": [
                    "curriculum_id",
                    "course_id",
                    "year_order",
                    "term_order",
                    "term_alias",
                    "is_include_gwa"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "curriculum_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "course_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "year_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "term_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "term_alias": {
                        "type": "string",
                        "example": "1st Semester"
                    },
                    "is_include_gwa": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "curriculum": {
                        "$ref": "#\/components\/schemas\/Curriculum"
                    },
                    "course": {
                        "$ref": "#\/components\/schemas\/Course"
                    },
                    "year_label": {
                        "type": "string",
                        "readOnly": true,
                        "example": "1st Year"
                    },
                    "term_label": {
                        "type": "string",
                        "readOnly": true,
                        "example": "1st Term"
                    }
                },
                "type": "object"
            },
            "MultipleCurriculumDetail": {
                "title": "CurriculumDetail",
                "required": [
                    "curriculum_id",
                    "year_order",
                    "term_order",
                    "term_alias",
                    "is_include_gwa",
                    "courses"
                ],
                "properties": {
                    "curriculum_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "year_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "term_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "term_alias": {
                        "type": "string",
                        "example": "1st Semester"
                    },
                    "is_include_gwa": {
                        "type": "boolean",
                        "example": false
                    },
                    "courses": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "PaginatedCurriculumDetail": {
                "title": "PaginatedCurriculumDetail",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CurriculumDetail"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedCurriculumDetailResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedCurriculumDetail"
                    }
                },
                "type": "object"
            },
            "GetCurriculumDetailResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/CurriculumDetail"
                    }
                },
                "type": "object"
            },
            "GetCurriculumDetailsResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CurriculumDetail"
                        }
                    }
                },
                "type": "object"
            },
            "CreateCurriculumDetailResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/CurriculumDetail"
                    }
                },
                "type": "object"
            },
            "UpdateCurriculumDetailResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/CurriculumDetail"
                    }
                },
                "type": "object"
            },
            "DeleteCurriculumDetailResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "ProgramType": {
                "title": "ProgramType",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-07T10:27:56.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-07T10:27:56.000000Z"
                    },
                    "name": {
                        "type": "string",
                        "example": "Example Program Type"
                    }
                },
                "type": "object"
            },
            "PaginatedProgramType": {
                "title": "PaginatedProgramType",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramType"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedProgramTypeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedProgramType"
                    }
                },
                "type": "object"
            },
            "GetProgramTypeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/ProgramType"
                    }
                },
                "type": "object"
            },
            "CreateProgramTypeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/ProgramType"
                    }
                },
                "type": "object"
            },
            "UpdateProgramTypeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/ProgramType"
                    }
                },
                "type": "object"
            },
            "DeleteProgramTypeResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Room": {
                "title": "Room",
                "required": [
                    "name",
                    "short_name",
                    "building_id",
                    "floor",
                    "room_code",
                    "is_lab",
                    "room_capacity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Computer Laboratory 1"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "CompLab1"
                    },
                    "building_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "floor": {
                        "type": "integer",
                        "example": 2
                    },
                    "room_code": {
                        "type": "string",
                        "example": "CL-201"
                    },
                    "is_lab": {
                        "type": "boolean",
                        "example": true
                    },
                    "room_capacity": {
                        "type": "integer",
                        "example": 30
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaginatedRoom": {
                "title": "PaginatedRoom",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Room"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedRoomResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedRoom"
                    }
                },
                "type": "object"
            },
            "GetRoomResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Room"
                    }
                },
                "type": "object"
            },
            "CreateRoomResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Room"
                    }
                },
                "type": "object"
            },
            "UpdateRoomResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/Room"
                    }
                },
                "type": "object"
            },
            "DeleteRoomResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "SchoolYear": {
                "title": "SchoolYear",
                "required": [
                    "school_year_code",
                    "name",
                    "start_date",
                    "end_date",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "school_year_code": {
                        "type": "string",
                        "example": "2024-2025"
                    },
                    "name": {
                        "type": "string",
                        "example": "AY 2024-2025"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-06-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-31"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_locked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_current": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "PaginatedSchoolYear": {
                "title": "PaginatedSchoolYear",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SchoolYear"
                        }
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginatedSchoolYearResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/PaginatedSchoolYear"
                    }
                },
                "type": "object"
            },
            "GetSchoolYearResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/SchoolYear"
                    }
                },
                "type": "object"
            },
            "GetSchoolYearsResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SchoolYear"
                        }
                    }
                },
                "type": "object"
            },
            "CreateSchoolYearResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/SchoolYear"
                    }
                },
                "type": "object"
            },
            "UpdateSchoolYearResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#\/components\/schemas\/SchoolYear"
                    }
                },
                "type": "object"
            },
            "DeleteSchoolYearResponse200": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "200": {
                "description": "Successful response",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/SuccessResponse"
                        }
                    }
                }
            },
            "204": {
                "description": "No content response",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/NoContentResponse"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/BadRequestResponse"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthenticated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/UnauthenticatedResponse"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/ForbiddenResponse"
                        }
                    }
                }
            },
            "404": {
                "description": "Not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/NotFoundResponse"
                        }
                    }
                }
            },
            "409": {
                "description": "Conflict",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/BadRequestResponse"
                        }
                    }
                }
            },
            "422": {
                "description": "Validation error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/ValidationErrorResponse"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "AcademicCalendar",
            "description": "AcademicCalendar"
        },
        {
            "name": "AcademicProgram",
            "description": "AcademicProgram"
        },
        {
            "name": "AcademicTerm",
            "description": "AcademicTerm"
        },
        {
            "name": "Building",
            "description": "Building"
        },
        {
            "name": "Campus",
            "description": "Campus"
        },
        {
            "name": "College",
            "description": "College"
        },
        {
            "name": "Course",
            "description": "Course"
        },
        {
            "name": "Curriculum",
            "description": "Curriculum"
        },
        {
            "name": "CurriculumDetail",
            "description": "CurriculumDetail"
        },
        {
            "name": "ProgramType",
            "description": "ProgramType"
        },
        {
            "name": "Room",
            "description": "Room"
        },
        {
            "name": "SchoolYear",
            "description": "SchoolYear"
        }
    ]
}